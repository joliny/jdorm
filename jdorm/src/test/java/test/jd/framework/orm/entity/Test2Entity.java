/*
 * 文件：test.jd.framework.orm.entity.Test2.java
 * 日 期：Fri May 02 01:25:11 CST 2014
 */
package test.jd.framework.orm.entity;

import com.jd.framework.orm.annotation.Column;
import com.jd.framework.orm.annotation.Table;
import com.jd.framework.orm.entity.BaseEntity;
import com.jd.framework.orm.schema.SchemaColumn;
import com.jd.framework.orm.schema.SchemaInfo;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * 
 * this file is generated by the jdorm pojo tools.
 *
 * @author <a href="mailto:liubingsmile@gmail.com">liubing</a>
 * @version 1.0.0
 */
@Table(name = "test2",readschema="test",writeschema="test")
public class Test2Entity extends BaseEntity implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	
	/**
	 * primary key field of id
	 * 
	 */
	
	private Integer id;
	/**  */
	
	private String testname;
	
	public Test2Entity() {
		super();
	}

	/**
	 * @return the id 
	 */
	@Column(isKey=true,name="id",isNull=false,typeLength=11 )
	public Integer getId() {
		return this.id;
	}
	
	/**
	 * 
	 * @param id the id to set
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * @return the testname 
	 */
	@Column(isKey=false,name="testname",isNull=true,typeLength=45 )
	public String getTestname() {
		return this.testname;
	}
	
	/**
	 * 
	 * @param testname the testname to set
	 */
	public void setTestname(String testname) {
		this.testname = testname;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof Test2Entity)) {
			return false;
		}
		Test2Entity other = (Test2Entity)o;
		if (null == this.id) {
			if (other.id != null)
				return false;
		} else if (!this.id.equals(other.id))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}
	

	/* (non-Javadoc)
	 * @see test.jd.framework.orm.entity.Test2#getSchemaInfo()
	 */
	@Override
	public SchemaInfo getSchemaInfo() {
	SchemaInfo schemaInfo=new SchemaInfo();
	schemaInfo.setTableClass(Test2Entity.class);
	schemaInfo.setReadDataBase("test");
	schemaInfo.setWriteDataBase("test");
	schemaInfo.setTableName("test2");
	List<SchemaColumn> schemaColumns=new ArrayList<SchemaColumn>();
	SchemaColumn schemaColumn=new SchemaColumn();
	schemaColumn.setColumnName("id");
	schemaColumn.setFieldClass(java.lang.Integer.class);
	schemaColumn.setFieldName("id");
	schemaColumn.setFieldValue(id);
	schemaColumn.setIstransient(false);
	schemaColumn.setNullable(false);
	schemaColumn.setPrimaryKey(true);
	schemaColumn.setTypeName("INT");
	schemaColumn.setTypeLength(11);
	schemaColumn.setTypeScale(0);
	schemaColumns.add(schemaColumn);
	schemaColumn=new SchemaColumn();
	schemaColumn.setColumnName("testname");
	schemaColumn.setFieldClass(java.lang.String.class);
	schemaColumn.setFieldName("testname");
	schemaColumn.setFieldValue(testname);
	schemaColumn.setIstransient(false);
	schemaColumn.setNullable(true);
	schemaColumn.setPrimaryKey(false);
	schemaColumn.setTypeName("VARCHAR");
	schemaColumn.setTypeLength(45);
	schemaColumn.setTypeScale(0);
	schemaColumns.add(schemaColumn);
	schemaInfo.setColumns(schemaColumns);
	return schemaInfo;
	}

	

	/* (non-Javadoc)
	 * @see test.jd.framework.orm.entity.Test2#toJsonObject()
	 */
	@Override
	public String toJsonObject() {
	return "{'id':'"+id+"','testname':'"+testname+"'}";
	}
}